/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Point;
import java.io.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.Date;
import java.util.Hashtable;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Sony
 */
public class check extends javax.swing.JFrame {

    /**
     * Creates new form check
     */
    public check() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        Submit = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        Type = new javax.swing.JComboBox();
        Driver = new javax.swing.JTextField();
        Registration = new javax.swing.JTextField();
        model = new javax.swing.JComboBox();
        capicity = new javax.swing.JComboBox();
        servicedate = new javax.swing.JTextField();
        reading = new javax.swing.JLabel();
        kmreading = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        Car = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        Todelte = new javax.swing.JTextField();
        remove = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        Move = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        Add = new javax.swing.JButton();
        name = new javax.swing.JTextField();
        id = new javax.swing.JTextField();
        address = new javax.swing.JTextField();
        number = new javax.swing.JTextField();
        password = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        lid = new javax.swing.JTextField();
        Sign_in = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        type = new javax.swing.JComboBox();
        jLabel22 = new javax.swing.JLabel();
        time = new javax.swing.JTextField();
        from = new javax.swing.JTextField();
        to = new javax.swing.JTextField();
        date = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        cap = new javax.swing.JComboBox();
        Book = new javax.swing.JButton();
        status = new javax.swing.JLabel();
        lpd = new javax.swing.JPasswordField();
        date_to = new javax.swing.JTextField();
        logout = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(null);

        Submit.setText("Submit");
        Submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitActionPerformed(evt);
            }
        });
        jPanel1.add(Submit);
        Submit.setBounds(380, 250, 110, 30);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 204, 255));
        jLabel2.setText("Type Of Vehicle");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(60, 0, 116, 17);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 204, 255));
        jLabel3.setText("Driver's Name");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(80, 40, 96, 17);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 204, 255));
        jLabel4.setText("Registration N.m");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(60, 70, 116, 17);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 204, 255));
        jLabel5.setText("Vehicle Model");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(80, 110, 93, 17);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 204, 255));
        jLabel6.setText("Seating Capicity");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(70, 140, 110, 20);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 204, 255));
        jLabel7.setText("Last Serviced Date ");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(50, 170, 131, 17);

        Type.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Non Ac", "Ac", "Sleeper"}));
        jPanel1.add(Type);
        Type.setBounds(260, 0, 100, 20);
        jPanel1.add(Driver);
        Driver.setBounds(260, 30, 99, 30);
        jPanel1.add(Registration);
        Registration.setBounds(260, 70, 98, 30);

        model.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2009" }));
        jPanel1.add(model);
        model.setBounds(260, 110, 100, 20);

        capicity.setModel(new javax.swing.DefaultComboBoxModel(new String[] {"1", "2", "3", "4","5","6"}));
        jPanel1.add(capicity);
        capicity.setBounds(260, 140, 100, 20);

        servicedate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                servicedateActionPerformed(evt);
            }
        });
        jPanel1.add(servicedate);
        servicedate.setBounds(260, 170, 100, 20);

        reading.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        reading.setForeground(new java.awt.Color(51, 204, 255));
        reading.setText("K.M Reading");
        jPanel1.add(reading);
        reading.setBounds(80, 220, 86, 17);

        kmreading.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kmreadingActionPerformed(evt);
            }
        });
        jPanel1.add(kmreading);
        kmreading.setBounds(260, 210, 100, 20);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(51, 204, 255));
        jLabel17.setText("Car_name");
        jPanel1.add(jLabel17);
        jLabel17.setBounds(90, 250, 80, 17);
        jPanel1.add(Car);
        Car.setBounds(260, 250, 100, 20);

        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/taxi_to_newjersey_1080p-HD.jpg"))); // NOI18N
        jPanel1.add(jLabel25);
        jLabel25.setBounds(0, 0, 490, 280);

        jTabbedPane1.addTab("tab1", jPanel1);

        jPanel2.setLayout(null);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(153, 204, 255));
        jLabel8.setText("Enter the Registration Number");
        jPanel2.add(jLabel8);
        jLabel8.setBounds(150, 10, 221, 17);
        jPanel2.add(Todelte);
        Todelte.setBounds(180, 50, 174, 20);

        remove.setText("Remove");
        remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeActionPerformed(evt);
            }
        });
        jPanel2.add(remove);
        remove.setBounds(220, 90, 90, 23);

        jLabel10.setIcon(new javax.swing.ImageIcon("C:\\Users\\Sony\\Desktop\\bg.jpg")); // NOI18N
        jPanel2.add(jLabel10);
        jLabel10.setBounds(0, 0, 490, 120);

        Move.setText("Move");
        Move.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoveActionPerformed(evt);
            }
        });
        jPanel2.add(Move);
        Move.setBounds(200, 180, 59, 23);

        jTabbedPane1.addTab("tab2", jPanel2);

        jPanel3.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("New User Registration form");
        jPanel3.add(jLabel1);
        jLabel1.setBounds(203, 11, 198, 17);

        jLabel11.setText("Name");
        jPanel3.add(jLabel11);
        jLabel11.setBounds(10, 48, 27, 14);

        jLabel12.setText("contact_id");
        jPanel3.add(jLabel12);
        jLabel12.setBounds(10, 94, 60, 20);

        jLabel13.setText("Address");
        jPanel3.add(jLabel13);
        jLabel13.setBounds(10, 150, 39, 14);

        jLabel14.setText("Conact n/m");
        jPanel3.add(jLabel14);
        jLabel14.setBounds(213, 48, 80, 14);

        Add.setText("Add Account");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });
        jPanel3.add(Add);
        Add.setBounds(134, 260, 93, 23);
        jPanel3.add(name);
        name.setBounds(78, 45, 79, 20);

        id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idActionPerformed(evt);
            }
        });
        jPanel3.add(id);
        id.setBounds(78, 94, 79, 20);

        address.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressActionPerformed(evt);
            }
        });
        jPanel3.add(address);
        address.setBounds(78, 150, 79, 104);
        jPanel3.add(number);
        number.setBounds(297, 45, 69, 20);

        password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordActionPerformed(evt);
            }
        });
        jPanel3.add(password);
        password.setBounds(297, 94, 69, 20);

        jLabel15.setText("password");
        jPanel3.add(jLabel15);
        jLabel15.setBounds(213, 97, 46, 14);

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/stock-vector-vintage-web-design-template-eps-vector-illustration-old-paper-texture-retro-style-109401749.jpg"))); // NOI18N
        jPanel3.add(jLabel9);
        jLabel9.setBounds(0, 0, 490, 280);

        jTabbedPane1.addTab("tab3", jPanel3);

        jPanel4.setLayout(null);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setText("Booking Window");
        jPanel4.add(jLabel16);
        jLabel16.setBounds(123, 21, 117, 17);

        lid.setText("Client_id");
        jPanel4.add(lid);
        lid.setBounds(34, 49, 79, 20);

        Sign_in.setText("Sign_in");
        Sign_in.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Sign_inActionPerformed(evt);
            }
        });
        jPanel4.add(Sign_in);
        Sign_in.setBounds(309, 46, 80, 23);

        jLabel18.setText("From");
        jPanel4.add(jLabel18);
        jLabel18.setBounds(34, 85, 63, 14);

        jLabel19.setText("to");
        jPanel4.add(jLabel19);
        jLabel19.setBounds(34, 116, 40, 14);

        jLabel20.setText("Date");
        jPanel4.add(jLabel20);
        jLabel20.setBounds(30, 150, 50, 14);

        jLabel21.setText("Type");
        jPanel4.add(jLabel21);
        jLabel21.setBounds(34, 205, 50, 14);

        type.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ac", "Non Ac", "Sleeper"}));
        jPanel4.add(type);
        type.setBounds(115, 202, 68, 20);

        jLabel22.setText("time");
        jPanel4.add(jLabel22);
        jLabel22.setBounds(34, 243, 50, 14);

        time.setEnabled(false);
        time.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeActionPerformed(evt);
            }
        });
        jPanel4.add(time);
        time.setBounds(115, 240, 68, 20);

        from.setEnabled(false);
        from.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fromActionPerformed(evt);
            }
        });
        jPanel4.add(from);
        from.setBounds(115, 82, 68, 20);

        to.setEnabled(false);
        jPanel4.add(to);
        to.setBounds(115, 113, 68, 20);

        date.setEnabled(false);
        date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateActionPerformed(evt);
            }
        });
        jPanel4.add(date);
        date.setBounds(80, 150, 68, 20);

        jLabel23.setText("Capicity");
        jPanel4.add(jLabel23);
        jLabel23.setBounds(224, 83, 55, 14);

        cap.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4","5","6" }));
        jPanel4.add(cap);
        cap.setBounds(320, 80, 67, 20);

        Book.setText("Book");
        Book.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BookActionPerformed(evt);
            }
        });
        jPanel4.add(Book);
        Book.setBounds(296, 118, 93, 35);

        status.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        status.setForeground(new java.awt.Color(255, 51, 51));
        status.setText("Status");
        status.setEnabled(false);
        jPanel4.add(status);
        status.setBounds(290, 160, 179, 113);

        lpd.setText("jPasswordField1");
        jPanel4.add(lpd);
        lpd.setBounds(123, 49, 87, 20);

        date_to.setEnabled(false);
        jPanel4.add(date_to);
        date_to.setBounds(170, 150, 70, 20);

        logout.setText("Logout");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });
        jPanel4.add(logout);
        logout.setBounds(400, 43, 65, 30);

        jLabel24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/seaweb2_new_190x180_en.gif"))); // NOI18N
        jPanel4.add(jLabel24);
        jLabel24.setBounds(0, 10, 500, 280);

        jTabbedPane1.addTab("tab4", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitActionPerformed
        // TODO add your handling code here:
        String type = (String) Type.getSelectedItem();
        String driver = Driver.getText();
        String Regis_number = Registration.getText();
        int Model = Integer.parseInt((String) model.getSelectedItem());
        int Capcity =Integer.parseInt((String) capicity.getSelectedItem());
        String service = servicedate.getText();
        int reading = Integer.parseInt((String)kmreading.getText());
        String car  = Car.getText();
        System.out.println(type+" "+driver+" "+Regis_number+" "+Model+" "+Capcity+" "+service+" "+reading+" "+car);
        Connection conn = null;
	  
	String url = "jdbc:mysql://localhost:3306/";
		  
	String dbName = "taxi_service";
	  
	String userName = "root"; 
		  
	String password = "";
        java.sql.Statement sc = null;
         try {
		conn = DriverManager.getConnection(url+dbName,userName,password);
		sc = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
        System.out.println("Connection Successfull");
       } catch (SQLException ex) {
            Logger.getLogger(check.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            sc.execute("insert into taxi (resgistration,type,kmread,model,capcity,service_date,driver,car,place)values('"+Regis_number+"','"+type+"',"+reading+","+Model+","+Capcity+",'"+service+"','"+driver+"','"+car+"','"+" "+"')");
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(check.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_SubmitActionPerformed

    private void removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeActionPerformed
        // TODO add your handling code here:
        String delete = Todelte.getText();
        Connection conn = null;
	  
	String url = "jdbc:mysql://localhost:3306/";
		  
	String dbName = "taxi_service";
	  
	String userName = "root"; 
		  
	String password = "";
        java.sql.Statement sc = null;
         try {
		conn = DriverManager.getConnection(url+dbName,userName,password);
		sc = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
        System.out.println("Connection Successfull");
       } catch (SQLException ex) {
            Logger.getLogger(check.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            sc.execute("DELETE FROM taxi WHERE resgistration='"+delete+"'");
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(check.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_removeActionPerformed

    private void servicedateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_servicedateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_servicedateActionPerformed

    private void idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idActionPerformed

    private void addressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addressActionPerformed

    private void passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordActionPerformed

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        // TODO add your handling code here:
        String Name = name.getText();
        String Id = id.getText();
        String add = address.getText();
        String num = number.getText();
        String passw = password.getText();
        Connection conn = null;
	  
	String url = "jdbc:mysql://localhost:3306/";
		  
	String dbName = "taxi_service";
	  
	String userName = "root"; 
		  
	String password = "";
        java.sql.Statement sc = null;
         try {
		conn = DriverManager.getConnection(url+dbName,userName,password);
		sc = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
        System.out.println("Connection Successfull");
       } catch (SQLException ex) {
            Logger.getLogger(check.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            sc.execute("insert into client (name,address,cnumber,password,login_id)values('"+Name+"','"+add+"','"+num+"','"+passw+"','"+Id+"')");
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(check.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_AddActionPerformed

    private void dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateActionPerformed

    private void timeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timeActionPerformed

    private void BookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BookActionPerformed

            // TODO add your handling code here:
          Vector<String> avl = new Vector<String>();
          int[][] map;
          Point[] pp ;
          int[][] nodel ;
          String[] name;
          int node,start,end;
          String first = null;
          String login_id = lid.getText();
          String From = from.getText();
          String To = to.getText();
          String Date = date.getText();
          int capi = Integer.parseInt((String)cap.getSelectedItem());
          String ty = (String) type.getSelectedItem();
          String ti = time.getText();
          String dd = date_to.getText();
          FileInputStream fstream = null;
            try {
                    fstream = new FileInputStream("out.txt");
            } catch (FileNotFoundException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
            }
              DataInputStream in = new DataInputStream(fstream);
              BufferedReader br = new BufferedReader(new InputStreamReader(in));
                try {
                    br.readLine();
                    first = br.readLine();
                } catch (IOException ex) {
                    Logger.getLogger(check.class.getName()).log(Level.SEVERE, null, ex);
                }
             name = first.split(" ");
              for(int i=0;i<5;i++){
         System.out.println(name[i]);
        }
        start = index(name,From);
         end = index(name,To);
             node = name.length;
              nodel = new int[node][2];
              pp = new Point[node];
                for(int y=0;y<node;y++){
                try {
                    pp[y] = new Point();
                    String[] words = br.readLine().split(" ");
                    nodel[y][0] = Integer.parseInt(words[0]);
                    nodel[y][1] = Integer.parseInt(words[1]);
                    pp[y].x = nodel[y][0];
                    pp[y].y = nodel[y][1];
                } catch (IOException ex) {
                    Logger.getLogger(check.class.getName()).log(Level.SEVERE, null, ex);
                }
                            }
            Hashtable<String,Point> ht = new Hashtable<String,Point>();
            for(int u=0;u<node;u++){
            ht.put(name[u],pp[u]);
            }
            String[] lines = new String[node];
                   map = new int[node][node]; 
                   for(int l=0;l<node;l++){
                try {
                    lines = br.readLine().split(" ");
                    for(int h=0;h<node;h++){
                            map[l][h] = Integer.parseInt(lines[h]);
                            System.out.print(map[l][h]+" ");
                    }
                } catch (IOException ex) {
                    Logger.getLogger(check.class.getName()).log(Level.SEVERE, null, ex);
                }
                    }
              int[] location = new int[node];
                       String[] cabsp = new String[node];
        try {
            cabsp = br.readLine().split(" ");
        } catch (IOException ex) {
            Logger.getLogger(check.class.getName()).log(Level.SEVERE, null, ex);
        }
                       for(int d=0;d<node;d++){
                              location[d] = Integer.parseInt(cabsp[d]);
                       }
                     Vector<Integer> vc = Shortest_path(map,node,start,end);
                     String ppp = " ";
                     for(int fff=0;fff<vc.size();fff++){
                     ppp = ppp+name[Integer.parseInt(vc.elementAt(fff).toString())]+"  ";
                     }
                     JOptionPane.showMessageDialog(null,"Path Choosen For this journey is"+" "+ppp);
        Connection conn = null;
	 
	String url = "jdbc:mysql://localhost:3306/";
		  
	String dbName = "taxi_service";
	  
	String userName = "root"; 
		  
	String password = "";
        java.sql.Statement sc = null;
        ResultSet rs;
         try {
		conn = DriverManager.getConnection(url+dbName,userName,password);
		sc = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
        System.out.println("Connection Successfull");
       } catch (SQLException ex) {
            Logger.getLogger(check.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
         //sc.execute("insert into client (name,address,cnumber,password,login_id)values('"+Name+"','"+add+"',"+num+",'"+passw+"','"+Id+"')");
            rs = sc.executeQuery("select * from taxi where type='"+ty+"' and capcity>="+capi+"");
            while(rs.next()){  
            avl.add(rs.getString("resgistration"));
            }
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(check.class.getName()).log(Level.SEVERE, null, ex);
        }
        for(int g=0;g<avl.size();g++){
            System.out.println(avl.elementAt(g)+" "+"yeah");
        }
        try {
            update(avl,Date,dd,From,To,login_id);
        } catch (IOException ex) {
            Logger.getLogger(check.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BookActionPerformed
    void update(Vector<String> vc,String from,String to,String start,String end,String login) throws IOException{
      FileWriter fstream = new FileWriter("in.txt");
      BufferedWriter out = new BufferedWriter(fstream);
      out.write("done");
        Connection conn = null;
	 
	String url = "jdbc:mysql://localhost:3306/";
		  
	String dbName = "taxi_service";
	  
	String userName = "root"; 
	String password = "";
        java.sql.Statement sc = null;
        ResultSet rs,rs1;
        int aa=0;
         try {
		conn = DriverManager.getConnection(url+dbName,userName,password);
		sc = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
        System.out.println("Connection Successfull");
       } catch (SQLException ex) {
            Logger.getLogger(check.class.getName()).log(Level.SEVERE, null, ex);
       }
        try {
         for(int i=0;i<vc.size();i++){
            String cc = null;
            Boolean st = true;
            System.out.println("i'min");
            rs = sc.executeQuery("select * from booking where registration='"+vc.elementAt(i) +"' and status= "+0+"");
            while(rs.next()){  
            String temp1 = rs.getString("start");
            String temp2 = rs.getString("end");
            System.out.println(temp1+" "+temp2+"yeah");
            int a = chec(temp1,from,to); 
            int b = chec(temp2,from,to);
            System.out.println(a+"   "+b);
            if(a==1 || b==1){
             st = false;
            break;
            }
            }
            if(st){
            System.out.println("i'min");
            rs1 = sc.executeQuery("select * from taxi where resgistration='"+vc.elementAt(i) +"'");
            while(rs1.next()){
            cc = rs1.getString("car");
            }
            int t=JOptionPane.showConfirmDialog(null,"the car available is "+cc);
            if(t==0){
            System.out.println(vc.elementAt(i).toString()+" "+from+" "+to+" "+start+" "+end+" "+login+" "+aa);
            boolean execute = sc.execute("insert into booking(`registration`,`start`,`end`,`from`,`to`,`client`,`status`) values('"+vc.elementAt(i)+"','"+from+"','"+to+"','"+start+"','"+end+"','"+login+"',"+aa+")");
            break;   
            }
            }
            else{
              if(i==vc.size()-1)
            JOptionPane.showMessageDialog(null,"No car available Sorry");
            }
            }
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(check.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }
    int chec(String dd,String from,String to) {

       long  fro=Date.parse(from);  // From some date

       long too=Date.parse(to);     // To Some Date

       long check=Date.parse(dd);

      if((check-fro)>0 && (check-too)<=0)
      {
             return 1;
      }
      else{
      
      return 0;
      }
}
    int index(String[] name,String tar){
    int ans =0;    
        for(int i=0;i<name.length;i++){
            if(name[i].equals(tar)){
                return i;
            }
        }
    return 0;
    }
    static Vector<Integer> Shortest_path(int[][] a,int n,int v1,int v2){
		int[] set = new int[n];
		int[] path = new int[n];
		int[] length = new int[n];
		int[] temp = new int[n];
		int inf =9999999;
		Vector<Integer> vc = new Vector<Integer>();
		int i,j,s,z,tmp,c=0,f=0;
		s=v1;
		z=v2;
		for(i=0;i<n;i++)
		set[i]=0;
		for(i=0;i<n;i++)
		{
		if(a[s][i]==0)/*There is no direct edge between vertices s and i*/
		    {
		length[i]=inf;
		path[i]=0;/*Empty path*/
		      }
		else
		    {
		length[i]=a[s][i];
		path[i]=s;
		     }
		}
		set[s]=1;
		length[s]=0;
		while(set[z]!=1)
		 {
		j=srch_min(length,set,n);
		set[j]=1;
		for(i=0;i<n;i++)
		  {	
		if(set[i]!=1)
		   {
		if(a[i][j]!=0)
	     	  {
		if(length[j]+a[i][j]<length[i])	
		         {
		length[i]=length[j]+a[i][j];
		path[i]=j;
		          }
		        }
		     }
		   }
		}
		j=0;
		i=z;
		while(i!=s)
		{
		tmp=path[i];
		temp[j]=tmp;
		i=tmp;
		j++;
		c++;
		}
		for(j=c-1;j>=0;j--)
		{
			vc.add(temp[j]);
		if(temp[j]==z)
		f=1;
		}
		if(f!=1)
			vc.add(z);
				return vc;
	}
	static int srch_min(int length[],int[] set,int n) 
	{
	int min,i,min_index=90;
	min=99999;
	for(i=1;i<n;i++)
	{
	if(set[i]!=1)
	{
	if(length[i]<min)
	{
	min=length[i];
	min_index=i;
	}
	}
	}
	return min_index;
	}
    private void fromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fromActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fromActionPerformed

    private void Sign_inActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Sign_inActionPerformed
        // TODO add your handling code here:
        String username = lid.getText();
        char[] pass = lpd.getPassword();
        String pd = change(pass);
        Connection conn = null;
	ResultSet rs;  
	String url = "jdbc:mysql://localhost:3306/";
		  
	String dbName = "taxi_service";
		  
	String driver = "com.mysql.jdbc.Driver";
		  
	String userName = "root"; 
		  
	String password = "";
        java.sql.Statement sc = null;
         try {
		conn = DriverManager.getConnection(url+dbName,userName,password);
		sc = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
        System.out.println("Connection Successfull");
       } catch (SQLException ex) {
            Logger.getLogger(check.class.getName()).log(Level.SEVERE, null, ex);
       }
            String temp=null;
         if(!username.equals("") && username!=null && !pd.equals("") && pd!=null){
            try {
                rs = sc.executeQuery("SELECT password FROM client WHERE login_id='"+username+"'");
                while(rs.next()){  
                temp = rs.getString("password");
            }
            } catch (SQLException ex) {
                Logger.getLogger(check.class.getName()).log(Level.SEVERE, null, ex);
            }
            }
            System.out.println(temp+" "+pd);
             if(temp.equals(pd)){
                 System.out.println(username+"  "+pd+"  "+temp);
                from.setEnabled(true);
                to.setEnabled(true);
                date.setEnabled(true);
                time.setEnabled(true);
                date_to.setEnabled(true);
             }
             else{
                System.out.println("wrong username and password");
             }
    }//GEN-LAST:event_Sign_inActionPerformed

    private void kmreadingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kmreadingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kmreadingActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        // TODO add your handling code here:
                lid.setText("");
                lpd.setText("");
                from.setText("");
                to.setText("");
                date.setText("");
                time.setText("");
                date_to.setText("");
                from.setEnabled(false);
                to.setEnabled(false);
                date.setEnabled(false);
                time.setEnabled(false);
                date_to.setEnabled(false);
    }//GEN-LAST:event_logoutActionPerformed

    private void MoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoveActionPerformed
        // TODO add your handling code here:
        String[][] cordi = new String[3][2];
        Calendar now = Calendar.getInstance();
        String date = now.get(Calendar.DATE)
			  + "/"
			  +now.get(Calendar.MONTH) + 1
			  + "/"
			  + now.get(Calendar.YEAR);
        String t1,t2,t3,t4;
        Connection conn = null;
	 
	String url = "jdbc:mysql://localhost:3306/";
		  
	String dbName = "taxi_service";
	  
	String userName = "root"; 
		  
	String password = "";
        java.sql.Statement sc = null;
        ResultSet rs;
         try {
		conn = DriverManager.getConnection(url+dbName,userName,password);
		sc = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
        System.out.println("Connection Successfull");
       } catch (SQLException ex) {
            Logger.getLogger(check.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
         //sc.execute("insert into client (name,address,cnumber,password,login_id)values('"+Name+"','"+add+"',"+num+",'"+passw+"','"+Id+"')");
            rs = sc.executeQuery("select * from booking");
            int count =0;
            while(rs.next()){
             t1 = rs.getString("start");
             t2 = rs.getString("end");
             t3 = rs.getString("from");
             t4 = rs.getString("to");
             if(chec(date,t1,t2)==1 && count<3){
                 cordi[count][0] =t3;
                 cordi[count][1] = t4;
                 count++;
             }
            }
            for(int i=0;i<3;i++){
            System.out.println(cordi[i][0]+" "+cordi[i][1]+"yoo");
            }
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(check.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(cordi[0][0]!=null){
        new Star(cordi[0][0],cordi[0][1]);
        }
    }//GEN-LAST:event_MoveActionPerformed
public String change(char[] name){
String temp = "";
String nn;
for(int i=0;i<name.length;i++){
	nn = Character.toString(name[i]);
	temp =temp.concat(nn);
}
return temp;
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
       //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(check.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(check.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(check.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(check.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new check().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JButton Book;
    private javax.swing.JTextField Car;
    private javax.swing.JTextField Driver;
    private javax.swing.JButton Move;
    private javax.swing.JTextField Registration;
    private javax.swing.JButton Sign_in;
    private javax.swing.JButton Submit;
    private javax.swing.JTextField Todelte;
    private javax.swing.JComboBox Type;
    private javax.swing.JTextField address;
    private javax.swing.JComboBox cap;
    private javax.swing.JComboBox capicity;
    private javax.swing.JTextField date;
    private javax.swing.JTextField date_to;
    private javax.swing.JTextField from;
    private javax.swing.JTextField id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField kmreading;
    private javax.swing.JTextField lid;
    private javax.swing.JButton logout;
    private javax.swing.JPasswordField lpd;
    private javax.swing.JComboBox model;
    private javax.swing.JTextField name;
    private javax.swing.JTextField number;
    private javax.swing.JTextField password;
    private javax.swing.JLabel reading;
    private javax.swing.JButton remove;
    private javax.swing.JTextField servicedate;
    private javax.swing.JLabel status;
    private javax.swing.JTextField time;
    private javax.swing.JTextField to;
    private javax.swing.JComboBox type;
    // End of variables declaration//GEN-END:variables
}
